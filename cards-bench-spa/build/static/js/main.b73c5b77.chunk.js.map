{"version":3,"sources":["ProtectedRoute.js","AnonymousRoute.js","components/loader/loader-view.js","components/dropdown-menu/dropdown-menu-view.js","components/dropdown-menu/dropdown-menu-container.js","components/navbar/navbar-view.js","services/auth-service.js","services/sweetalert-service.js","components/navbar/navbar-container.js","components/home/home-view.js","components/home/home-container.js","components/register/register-view.js","components/register/register-container.js","services/boards-service.js","components/error-page/error-page-view.js","components/pop-up-box/pop-up-box-view.js","components/pop-up-box/pop-up-box-container.js","components/boards/board-item.js","components/boards/boards-view.js","components/boards/boards-container.js","services/lists-service.js","components/moveable/moveable-container.js","services/cards-service.js","components/cards/cards-view.js","components/cards/cards-container.js","components/lists/lists-view.js","components/lists/lists-container.js","components/boards/board-details-view.js","components/boards/board-details-container.js","components/member-profile/member-profile-view.js","components/member-profile/member-profile-container.js","App.js","index.js"],"names":["ProtectedRoute","token","undefined","this","props","redirectTo","Component","component","localStorage","getItem","to","pathname","React","AnonymousRoute","LoaderView","style","width","height","borderWidth","borderStyle","borderColor","className","DropDownMenuView","display","toggle","onClick","toggleDropDownMenu","text","dropDownMenuItems","DropDownMenu","state","EventListenerFunction","event","target","matches","setState","setTimeout","window","addEventListener","removeEventListener","menuItems","map","item","index","key","NavbarView","form","authenticated","decodedToken","textDecoration","logout","dropdownMenuStyle","marginTop","isSmallScreen","family_name","showLoginBar","onSubmit","login","name","type","autoComplete","placeholder","value","loginInfo","email","onChange","handleChange","disabled","loggingIn","password","validForm","toggleLogin","Login","a","options","url","method","headers","Accept","data","axios","then","response","clear","setItem","JSON","stringify","user","catch","err","console","log","Logout","Register","registerInfo","gender","knownAs","Notify","info","message","timer","showConfirmButton","position","Swal","fire","mixin","progressSteps","input","confirmButtonText","showCancelButton","confirmButtonColor","background","queue","x","title","preConfirm","inputAttributes","autocapitalize","showLoaderOnConfirm","allowOutsideClick","isLoading","success","icon","warning","cancelButtonText","cancelButtonColor","error","Navbar","validEmail","validPassword","preventDefault","finally","changeAuthenticationState","parse","checkFormValidation","emailValidation","RegExp","test","length","jwt_decode","HomeView","Home","RegisterView","padding","margin","textAlign","WebkitBoxShadow","boxShadow","verticalAlign","register","htmlFor","id","defaultChecked","confirmEmail","confirmPassword","registering","createBoard","boardInfo","userId","boardName","getBoard","boardId","addUsersToBoard","usersEmail","deleteBoard","updateBoard","getUserBoards","ErrorPage","code","location","buttonHTML","PopUpBox","Form","popUpBoxContent","FormGroup","Button","onCancelClick","disableCancelButton","onConfirmClick","disableConfirmButton","showPopUpBox","onConfirmButtonClick","confirmButtonFunction","onCancelButtonClick","cancelButtonFunction","BoardItem","alt","src","BoardsView","loadingBoards","errorLoadingBoards","loadBoards","boardsToShow","boards","board","goToBoard","addUsers","PopUpBoxHTML","color","autoFocus","innerWidth","boardname","popUpBoxStyle","top","popUpBoxIsOpen","toggleCreatingBoard","styleWhenPopUpBox","opacity","pointerEvents","WebkitUserSelect","msUserSelect","userSelect","creatingBoard","deletingBoard","toggleCreatingBoardWindow","Boards","usersToAdd","BoardsService","result","e","prevState","splice","addList","listTitle","listControllerParams","deleteList","listId","updateList","listInfo","order","Moveable","mouseDown","X","Y","moveable","offsetLeft","clientX","y","offsetTop","clientY","mouseUp","mouseMove","left","document","querySelector","offsetWidth","addCard","cardTitle","controllerParams","deleteCard","cardId","updateCard","cardInfo","AddCardView","addingCard","toggleAddingCard","trim","CardView","setBottom","card","toggleMoving","bottom","push","Label","Control","as","toggleDrag","updatingCardId","changingOrder","toggleCardTitleUpdate","moveCard","Card","cards","currentCardTitle","updatingCardTitle","showSavingLoader","savingLoaderText","cardOrder","newCardOrder","ControllerParams","listParams","updateCardTitle","CardsService","filter","cancelAddingCard","unToggleCardTitleUpdate","replace","currentTitle","find","currentCardOrder","modifyCardsOrder","currentOrder","sort","b","option","maxHeight","ListToAdd","numberOfLists","addingList","toggleListAddition","ListView","toggleChangeOrder","listOrder","listToUpdateId","toggleChangeTitle","listTitleToUpdate","changeListOrder","List","lists","currentListTitle","newListOrder","previousListOrder","listsControllerParams","updateMaxHeight","offSet","screen","availHeight","screenOffset","innerHeight","Math","abs","cancelAddingList","unToggleListTitleUpdate","updateListTitle","updateListOrder","currentListOrder","ListsService","list","listToUpdate","l","modifyListsOrder","CancelAddingList","BoardDetailsView","loadingBoard","errorWhileLoadingBoard","loadBoard","toggleInvitingPeople","invitingPopUpBoxContent","peopleEmails","invitePeople","showMenu","invitingPeople","updatingBoardTitle","unToggleUpdatingTitle","boardTitle","toggleUpdatingTitle","toggleMenu","BoardDetails","currentBoardTitle","emailsToInvite","split","i","slice","boardDeleted","MemberProfileView","MemberProfile","App","bind","exact","path","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b73c5b77.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n// This can only work if u are authorized.\r\nclass ProtectedRoute extends React.Component {\r\n    render() {\r\n        const token = this.props.token === undefined ? 'token' : this.props.token;\r\n        const redirectTo = this.props.redirectTo === undefined ? '/' : this.props.redirectTo;\r\n\r\n        const Component = this.props.component;\r\n        const isAuthenticated = localStorage.getItem(token);\r\n       \r\n        return isAuthenticated ? (\r\n            <Component />\r\n        ) : (\r\n            <Redirect to={{ pathname: redirectTo }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n// This can only work if u are unauthorized.\r\nclass AnonymousRoute extends React.Component {\r\n    render() {\r\n        const token = this.props.token === undefined ? 'token' : this.props.token;\r\n        const redirectTo = this.props.redirectTo === undefined ? '/' : this.props.redirectTo;\r\n\r\n        const Component = this.props.component;\r\n        const isAuthenticated = localStorage.getItem(token);\r\n\r\n        return isAuthenticated === null ? (\r\n            <Component  {...this.props} />\r\n        ) : (\r\n            <Redirect to={{ pathname: redirectTo }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnonymousRoute;\r\n","import './loader-style.css'\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass LoaderView extends Component {\r\n    \r\n    render() {\r\n        const style = {\r\n            width: this.props.width,\r\n            height: this.props.height,\r\n            borderWidth: this.props.borderWidth,\r\n            borderStyle: this.props.borderStyle,\r\n            borderColor: this.props.borderColor,\r\n        }\r\n\r\n        return (    \r\n            <div style={style} className=\"loader\"></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoaderView;\r\n","import React from 'react';\r\n\r\nimport './dropdown-menu-style.css'\r\n\r\nfunction DropDownMenuView(props) {\r\n    const style = {\r\n        display: props.toggle === true ? 'block' : 'none',\r\n        ...props.style\r\n    }\r\n\r\n    return (\r\n        <div className=\"react-dropdown-menu\">\r\n            <span onClick={() => props.toggleDropDownMenu('dropdown-toggle')} className=\"dropdown-toggle-botton\">\r\n                { props.text } <i className=\"dropdown-toggle-symbol mb-1\"></i>\r\n            </span>\r\n            <div style={style} className=\"dropdown-items text-center\">\r\n                { props.dropDownMenuItems }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropDownMenuView;\r\n","import React, { Component } from 'react';\r\n\r\nimport DropDownMenuView from './dropdown-menu-view'\r\n\r\nclass DropDownMenu extends Component {\r\n    state = {\r\n        toggle: false\r\n    }\r\n\r\n    EventListenerFunction = (event) => {\r\n        if (!event.target.matches('.dropdown-toggle')) {\r\n            this.toggleDropDownMenu(false);\r\n        } else {\r\n            this.setState({ toggle:false })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('click', this.EventListenerFunction, false)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('click', this.EventListenerFunction, false);\r\n    }\r\n\r\n    toggleDropDownMenu = (event) => {\r\n        if (event === false || this.state.toggle === true) {\r\n            this.setState({ toggle: false });\r\n        }\r\n\r\n        else if (event === 'dropdown-toggle') {\r\n            setTimeout(() => {\r\n                this.setState({ toggle: true });\r\n            }, 30);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const menuItems = this.props.dropDownMenuItems.map((item, index) => \r\n            <span className=\"mb-1\" key={index} onClick={() => this.toggleDropDownMenu('dropdown-toggle')}> { item } </span>\r\n        );\r\n\r\n        return (\r\n          <DropDownMenuView\r\n            text={this.props.text}\r\n            dropDownMenuItems={menuItems}\r\n            toggleDropDownMenu={this.toggleDropDownMenu}\r\n            toggle={this.state.toggle}\r\n            style={this.props.style}\r\n          />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DropDownMenu;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport LoaderView from '../loader/loader-view'\r\nimport DropDownMenu from '../dropdown-menu/dropdown-menu-container'\r\n\r\nimport './navbar-styles.css';\r\n\r\n\r\nfunction NavbarView(props) {\r\n  let form;\r\n\r\n  if (props.authenticated) {\r\n    const decodedToken = props.decodedToken();\r\n\r\n    const dropDownMenuItems = [\r\n      <Link style={{textDecoration: 'none'}} className=\"button button-info button-small d-block mb-1 mr-2\" to=\"/profile\">\r\n        Profile\r\n      </Link>,\r\n      <Link style={{textDecoration: 'none'}} className=\"button button-danger button-small d-block mb-1 mr-2\" onClick={props.logout} to=\"/\">\r\n        Log Out\r\n      </Link>\r\n    ]\r\n\r\n    const dropdownMenuStyle = {\r\n      marginTop: '15px'\r\n    }\r\n\r\n    if (props.isSmallScreen === false) {\r\n      form = (\r\n        <form className=\"form-inline\">\r\n          <Link to=\"/\" className=\"ml-3 item\">Home</Link>\r\n          <Link to=\"/boards\" className=\"ml-3 item\">Boards</Link>\r\n          <div className=\"user-knownas ml-3 item\">\r\n            <DropDownMenu style={dropdownMenuStyle} text={decodedToken.family_name} dropDownMenuItems={dropDownMenuItems} />\r\n          </div>\r\n        </form>\r\n      );\r\n    } else {\r\n      form = (\r\n        <form className=\"form-inline\">\r\n          <Link to=\"/boards\" className=\"item\">Boards</Link>\r\n          <div className=\"ml-3 item\">\r\n            <DropDownMenu style={dropdownMenuStyle} text={decodedToken.family_name} dropDownMenuItems={dropDownMenuItems} />\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n\r\n  } else if (props.showLoginBar) {\r\n    form = (\r\n      <form onSubmit={props.login} className=\"form-inline my-2 my-lg-0\">\r\n        <input name=\"email\" type=\"email\" autoComplete=\"off\" placeholder=\"Email\"\r\n          className=\"form-control mr-sm-2\"\r\n          value={props.loginInfo.email}\r\n          onChange={props.handleChange}\r\n          disabled={props.loginInfo.loggingIn}\r\n        />\r\n        <input type=\"password\" name=\"password\" autoComplete=\"off\" placeholder=\"Password\"\r\n          className=\"form-control mr-sm-2\" \r\n          value={props.loginInfo.password}\r\n          onChange={props.handleChange}\r\n          disabled={props.loginInfo.loggingIn}\r\n        />\r\n\r\n        {\r\n          props.loginInfo.loggingIn === false ? \r\n            <button className=\"btn btn-outline-light mr-2 my-2 my-sm-0\"\r\n              disabled={props.loginInfo.validForm === false ? true : false }\r\n            >\r\n              Login\r\n            </button> :\r\n            <span className=\"mr-2 my-2 my-sm-0\">\r\n              <LoaderView width={20} height={20} borderWidth={8} borderStyle={'solid'} borderColor={'f3f3f3'} />\r\n            </span>\r\n        }\r\n        <span onClick={props.toggleLogin} className=\"btn btn-outline-danger my-2 my-sm-0\" disabled={props.loginInfo.loggingIn}>\r\n          Cancel\r\n        </span>\r\n      </form>\r\n    );\r\n  } else {\r\n    form = (\r\n      <form className=\"form-inline\">\r\n        <span onClick={props.toggleLogin} className=\"btn btn-outline-dark text-light mr-2 my-sm-0\">\r\n          Login\r\n        </span>\r\n        <Link to=\"/register\" className=\"btn btn-outline-light my-sm-0\">\r\n          Register\r\n        </Link>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar w-100 pt-0 pb-0\">\r\n      <Link to=\"/\" className=\"navbar-brand\"> CardsBench </Link>\r\n      { form }\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavbarView\r\n","import axios from 'axios';\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nasync function Login(loginInfo) {\r\n    const options = {\r\n        url: 'http://localhost:5000/api/auth/login',\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8'\r\n        },\r\n        data: {\r\n            email: loginInfo.email,\r\n            password: loginInfo.password,\r\n        }\r\n    };\r\n\r\n    return axios(options)\r\n        .then((response) => {\r\n            localStorage.clear();\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('user', JSON.stringify(response.data.user));\r\n          }).catch((err) => {\r\n            console.log(err);\r\n          })\r\n}\r\n\r\nfunction Logout() {\r\n    localStorage.clear();\r\n}\r\n\r\nasync function Register(registerInfo) {\r\n    const options = {\r\n        url: 'http://localhost:5000/api/auth/register',\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8'\r\n        },\r\n        data: {\r\n            email: registerInfo.email,\r\n            password: registerInfo.password,\r\n            gender: registerInfo.gender,\r\n            knownAs: registerInfo.knownAs\r\n        }\r\n    };\r\n\r\n    return axios(options)\r\n        .then((response) => {\r\n            localStorage.setItem('registerResponse', 'success')\r\n          }).catch((err) => {\r\n            if (err.response !== undefined) {\r\n                localStorage.setItem('registerResponse', JSON.stringify(err.response.data))\r\n            } else {\r\n                localStorage.setItem('registerResponse', 'Server may be offline, try again later.')\r\n            }\r\n        });\r\n}\r\n\r\nfunction decodedToken() {\r\n    if (localStorage.getItem('token') !== undefined)\r\n        return jwt_decode(localStorage.getItem('token'));\r\n    \r\n    return '';\r\n}\r\n\r\nexport { Login, Logout, Register, decodedToken };","import Swal from 'sweetalert2'\r\n\r\nclass Notify {\r\n    static info = (message, timer = 1500, showConfirmButton = false, position = 'bottom-end') => {\r\n        Swal.fire({\r\n            text: message,\r\n            timer: timer,\r\n            showConfirmButton: showConfirmButton,\r\n            position: position\r\n        });\r\n    }\r\n\r\n    static mixin = (info, progressSteps) => {\r\n        return Swal.mixin({\r\n            input: 'text',\r\n            confirmButtonText: 'Next &rarr;',\r\n            showCancelButton: true,\r\n            progressSteps: progressSteps,\r\n            confirmButtonColor: '#333333',\r\n            background: '#141414',\r\n        }).queue(\r\n            info.map(x => {\r\n                return {\r\n                    title: x[0] === undefined ? '' : x[0],\r\n                    text: x[1] === undefined ? '' : x[1],\r\n                    confirmButtonText: x[2] === undefined ? 'Next &rarr;' : x[2]\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    static preConfirm = (title, text, confirmButtonText='done', preConfirm) => {\r\n        return Swal.fire({\r\n            title: title,\r\n            text: text,\r\n            input: 'text',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: confirmButtonText,\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: preConfirm,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n    }\r\n\r\n    static success = (title, text, showConfirmButton=false, confirmButtonText='', position='top-end') => {\r\n        Swal.fire({\r\n            position: position,\r\n            icon: 'success',\r\n            title: title,\r\n            text: text,\r\n            showConfirmButton: showConfirmButton,\r\n            confirmButtonText: confirmButtonText\r\n        });\r\n    }\r\n\r\n    static warning = (title, text, confirmButtonText=\"Yes, Delete it!\", cancelButtonText=\"Cancel\",\r\n            confirmButtonColor=\"#d33\",\r\n            cancelButtonColor=\"5fd980\"\r\n        ) => {\r\n        return Swal.fire({\r\n            title: title,\r\n            text: text,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: confirmButtonColor,\r\n            cancelButtonColor: cancelButtonColor,\r\n            confirmButtonText: confirmButtonText,\r\n            cancelButtonText: cancelButtonText\r\n        })\r\n    }\r\n\r\n    static error = (title, text, confirmButtonText) => {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: title,\r\n            text: text,\r\n            confirmButtonText: confirmButtonText === undefined ? 'OK' : confirmButtonText\r\n        });\r\n    }\r\n}\r\n\r\nexport default Notify;\r\n","import React, { Component } from 'react';\r\n\r\nimport NavbarView from './navbar-view';\r\n\r\nimport { Login, Logout, decodedToken } from '../../services/auth-service'\r\nimport Notify  from '../../services/sweetalert-service'\r\n\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    showLoginBar: false,\r\n    email: '',\r\n    password: '',\r\n    validEmail: 'untouched',\r\n    validPassword: 'untouched',\r\n    validForm: false,\r\n    loggingIn: false,\r\n  };\r\n\r\n  toggleLogin = () => {\r\n    this.setState({ showLoginBar: !this.state.showLoginBar });\r\n  };\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n    this.setState({loggingIn: true});\r\n\r\n    const loginInfo = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    \r\n    Login(loginInfo).finally(() => {\r\n      if (localStorage.getItem('token') !== null) {\r\n        this.props.changeAuthenticationState();\r\n        Notify.success('Welcome ' + JSON.parse(localStorage.getItem('user')).knownAs, 'Have a nice day.', false, '');\r\n      } else {\r\n        Notify.info('Wrong Email or Password');\r\n      }\r\n\r\n      this.setState({loggingIn: false});\r\n    })\r\n  \r\n  };\r\n\r\n  logout = (event) => {\r\n    event.preventDefault();\r\n    Logout();\r\n    this.props.changeAuthenticationState();\r\n    Notify.info('Logged out. Redirecting to the Homepage.')\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value }, this.checkFormValidation);\r\n  };\r\n\r\n  checkFormValidation() {\r\n    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    const emailValidation = new RegExp(re).test(this.state.email);\r\n\r\n    let validForm = true;\r\n\r\n    if (this.state.password.length > 3) {\r\n      this.setState({ validPassword: 'true' });\r\n    } else if (this.state.password.length > 0) {\r\n      this.setState({ validPassword: 'false' });\r\n      validForm = false;\r\n    } else {\r\n      validForm = false;\r\n    }\r\n\r\n    if (emailValidation) {\r\n      this.setState({ validEmail: 'true' });\r\n    } else if (this.state.email.length > 0) {\r\n      this.setState({ validEmail: 'false' });\r\n      validForm = false;\r\n    } else {\r\n      validForm = false;\r\n    }\r\n\r\n    if (validForm) {\r\n      this.setState({ validForm: true });\r\n    } else {\r\n      this.setState({ validForm: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavbarView\r\n        authenticated={this.props.authenticated}\r\n        showLoginBar={this.state.showLoginBar}\r\n        logout={this.logout}\r\n        loginInfo={this.state}\r\n        handleChange={this.handleChange}\r\n        login={this.login}\r\n        toggleLogin={this.toggleLogin}\r\n        decodedToken={() => decodedToken()}\r\n        isSmallScreen={this.props.isSmallScreen}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nfunction HomeView() {\r\n  return (\r\n    <div> \r\n      Home Component\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeView","import React, { Component } from 'react';\r\n\r\nimport HomeView from './home-view'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return <HomeView />\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\n\r\nimport './register-styles.css';\r\n\r\nimport LoaderView from '../loader/loader-view'\r\n\r\nfunction RegisterView(props) {\r\n  const style = {\r\n    width: props.isSmallScreen ? '90%' : '60%',\r\n    padding: '50px 25px 80px 25px',\r\n    margin: '50px auto',\r\n    background: '#efefef',\r\n    textAlign: 'center',\r\n    WebkitBoxShadow: '2px 2px 3px rgba(0,0,0,0.1)',\r\n    boxShadow: '2px 2px 3px rgba(0,0,0,0.1)',\r\n    verticalAlign: 'middle'\r\n  }\r\n\r\n  return (\r\n    <div className=\"register\" style={style}>\r\n      <form onSubmit={props.register}>\r\n        <div className=\"form-check form-check-inline\">\r\n          <label className=\"form-check-label pr-1\" htmlFor=\"inlineRadio1\">\r\n            Male\r\n          </label>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            id=\"inlineRadio1\"\r\n            value=\"Male\"\r\n            onChange={props.handleChange}\r\n            defaultChecked\r\n          />\r\n        </div>\r\n        <div className=\"form-check form-check-inline\">\r\n          <label className=\"form-check-label pr-1\" htmlFor=\"inlineRadio2\">\r\n            Female\r\n          </label>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            id=\"inlineRadio2\"\r\n            value=\"Female\"\r\n            onChange={props.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={props.registerInfo.email}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"confirmEmail\"\r\n              placeholder=\"Confirm Email\"\r\n              value={props.registerInfo.confirmEmail}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={props.registerInfo.password}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              value={props.registerInfo.confirmPassword}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <center>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control w-100\"\r\n              name=\"knownAs\"\r\n              placeholder=\"Nickname\"\r\n              value={props.registerInfo.knownAs}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n        </center>\r\n        {\r\n          props.registerInfo.registering === false ? <button className=\"btn btn-primary\">Sign up</button> :\r\n            <center><LoaderView width={48} height={48} borderWidth={8} borderStyle={'solid'} borderColor={'f3f3f3'} /></center>\r\n        }\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterView;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Register as register, Login } from '../../services/auth-service' \r\n\r\nimport RegisterView from './register-view'\r\nimport Notify from '../../services/sweetalert-service';\r\n\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        email: '',\r\n        confirmEmail: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        gender: 'Male',\r\n        knownAs: '',\r\n        registering: false\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    register = (event) => {\r\n        event.preventDefault();\r\n        this.setState({registering: true})\r\n        register(this.state).finally(() => {\r\n            const registerResponse = localStorage.getItem('registerResponse');\r\n\r\n            if (registerResponse === 'success') {\r\n                const loginInfo = {\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                };\r\n\r\n                Notify.success('Registration Successful')\r\n                Login(loginInfo).finally(() => {\r\n                    if (localStorage.getItem('token') !== null) {\r\n                      this.props.changeAuthenticationState();\r\n                    }\r\n                  });\r\n            }\r\n\r\n            this.setState({registering: false})\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <RegisterView\r\n            isSmallScreen={this.props.isSmallScreen}\r\n            handleChange={this.handleChange}\r\n            registerInfo={this.state}\r\n            register={this.register}\r\n          />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import axios from 'axios';\r\n\r\nexport async function createBoard(boardInfo, userId) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${userId}/boards/`,\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        data: {\r\n            name: boardInfo.boardName\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function getBoard(userId, boardId) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${userId}/boards/${boardId}`,\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function addUsersToBoard(userId, boardId, usersEmail) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${userId}/boards/addusers`,\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        data: {\r\n            'usersEmails': usersEmail,\r\n            'boardId': boardId\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function deleteBoard(boardId, userId) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${userId}/boards/${boardId}`,\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function updateBoard(userId, boardInfo) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${userId}/boards/`,\r\n        method: 'PUT',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        data: {\r\n            boardId: boardInfo.boardId,\r\n            boardName: boardInfo.boardName,\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function getUserBoards(userId) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${userId}/boards/userboards`,\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './error-page-style.css'\r\n\r\nfunction ErrorPage(props) {\r\n    return (\r\n        <div className=\"error-page d-flex align-items-center\">\r\n            <div className=\"error-code text-center\">\r\n            { props.code === undefined ? props.location.state.code : props.code }\r\n            </div>\r\n            <div className=\"container text-center\">\r\n                <div className=\"pt-5 mt-5 pb-5 error-text\">\r\n                    { props.text === undefined ? props.location.state.text : props.text }\r\n                </div>\r\n                <span> { props.buttonHTML === undefined ? (\r\n                    <Link to=\"/\" className=\"error-page-button\">\r\n                        HOMEPAGE\r\n                    </Link>\r\n                ) : (\r\n                    props.buttonHTML\r\n                )} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from 'react'\r\nimport { Form, FormGroup, Button } from 'react-bootstrap'\r\n\r\nimport './pop-up-box-style.css'\r\n\r\nfunction PopUpBox(props) {\r\n    const confirmButtonText = props.confirmButtonText;\r\n    const cancelButtonText = props.cancelButtonText;\r\n    const style = props.style;\r\n    const margin = props.showCancelButton ? 'ml-1' : '';\r\n\r\n    return (\r\n\r\n        <div className=\"pop-up-box text-center container\" style={style}>\r\n            <Form>\r\n                <center>\r\n                    { props.popUpBoxContent }\r\n                </center>\r\n                    <FormGroup>\r\n                        {\r\n                            props.showCancelButton ? (\r\n                                <Button \r\n                                    className=\"button button-info button-small\" \r\n                                    onClick={props.onCancelClick}\r\n                                    disabled={props.disableCancelButton}\r\n                                >\r\n                                    { cancelButtonText }\r\n                                </Button>\r\n                            ) : ('')\r\n                        }\r\n                        {\r\n                            props.showConfirmButton ? (\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className={\"button button-success button-small \" + margin}\r\n                                    onClick={props.onConfirmClick}\r\n                                    disabled={props.disableConfirmButton}\r\n                                >\r\n                                    { confirmButtonText } \r\n                                </Button>\r\n                            ) : ('')\r\n                        }\r\n                    </FormGroup>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopUpBox;\r\n","import React, { Component } from 'react'\r\n\r\n\r\nimport PopUpBoxView from './pop-up-box-view'\r\n\r\nclass PopUpBox extends Component {\r\n    state = {\r\n        showPopUpBox: false\r\n    }\r\n\r\n    render() {\r\n        const style = this.props.style;\r\n        const popUpBoxContent = this.props.popUpBoxContent \r\n    \r\n        const confirmButtonText = this.props.confirmButtonText === undefined ? 'Confirm' : this.props.confirmButtonText\r\n        const showConfirmButton = this.props.showConfirmButton === undefined ? true : this.props.showConfirmButton;\r\n        const onConfirmButtonClick = this.props.confirmButtonFunction\r\n        const disableConfirmButton = this.props.disableConfirmButton\r\n        \r\n        const cancelButtonText = this.props.cancelButtonText === undefined ? 'Cancel' : this.props.cancelButtonText\r\n        const showCancelButton = this.props.showCancelButton === undefined ? true : this.props.showCancelButton;\r\n\r\n        const onCancelButtonClick = this.props.cancelButtonFunction\r\n        const disableCancelButton = this.props.disableCancelButton\r\n\r\n        return (\r\n            <PopUpBoxView\r\n                popUpBoxContent={popUpBoxContent}\r\n                confirmButtonText={confirmButtonText}\r\n                cancelButtonText={cancelButtonText}\r\n                style={style}\r\n                onConfirmClick={onConfirmButtonClick}\r\n                showConfirmButton={showConfirmButton}\r\n                disableConfirmButton={disableConfirmButton}\r\n                onCancelClick={onCancelButtonClick}\r\n                showCancelButton={showCancelButton}\r\n                disableCancelButton={disableCancelButton}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopUpBox\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction BoardItem(props) {\r\n    return (\r\n        <Link to={\"/boards/\" + props.boardId + \"/\" + props.boardName} className=\"boards col-12 col-sm-4 col-md-6 col-lg-4 mb-2\">\r\n            <div className=\"card\">\r\n                <div className=\"card-img-wrapper\">\r\n                    <img className=\"card-img-top card-img\" alt={props.boardName + 'board'} src=\"https://i.pinimg.com/564x/6f/d6/8c/6fd68ced202b643053e9f281de52a016.jpg\"/>\r\n                    <div className=\"card-content d-flex justify-content-between\">\r\n                        <div className=\"card-title pt-1\"> { props.boardName } </div>\r\n                    </div>\r\n                    {/* <ul className=\"list-inline board-options animate text-center\">\r\n                        <li className=\"list-inline-item\">\r\n                            <button onClick={props.deleteBoard} className=\"btn\">DELETE</button>\r\n                        </li>\r\n                        <li className=\"list-inline-item\">\r\n                            <Link className=\"btn\" to={\"/boards/\" + props.boardId + \"/\" + props.boardName}>VIEW</Link>\r\n                        </li>\r\n                    </ul> */}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default BoardItem\r\n","import React from 'react';\r\n\r\nimport ErrorPage from '../error-page/error-page-view';\r\nimport LoaderView from '../loader/loader-view'\r\nimport PopUpBox from '../pop-up-box/pop-up-box-container';\r\n\r\nimport Board from './board-item'\r\nimport './boards-style.css'\r\n\r\nfunction BoardsView(props) {\r\n    if (props.loadingBoards) {\r\n        return (\r\n            <div>\r\n                <div className=\"boards-loader\">\r\n                    <div className=\"loader-view pb-5 mb-5 d-flex justify-content-center\">\r\n                        <LoaderView width={100} height={100} />\r\n                    </div>\r\n                    <div className=\"loader-view loader-text mt-5 pt-5 d-flex justify-content-center\">\r\n                        <h5>Loading boards...</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (props.errorLoadingBoards) {\r\n        return <ErrorPage code={\"500\"} text={\"Error while loading your boards.\"} buttonHTML = {\r\n            <button onClick={() => props.loadBoards()} className=\"error-page-button\">CLICK TO TRY AGAIN</button>\r\n        } />\r\n    }\r\n\r\n    const boardsToShow = props.boards.map((board) => (\r\n        <Board\r\n            className=\"board\"\r\n            goToBoard={props.goToBoard}\r\n            key={board.boardId}\r\n            addUsers={() => props.addUsers(board.boardId)}\r\n            deleteBoard={() => props.deleteBoard(board.boardId)}\r\n            boardName={board.boardName}\r\n            boardId={board.boardId}\r\n        />\r\n    ));\r\n\r\n    const PopUpBoxHTML = (\r\n        <div className=\"mt-3\">\r\n            <h3 style={{color: '#1c1e21'}} >\r\n                Board Title\r\n            </h3>\r\n            <center>\r\n                <div className=\"mb-4\">\r\n                    <input type=\"text\" autoFocus=\"on\" \r\n                        onChange={props.handleChange}  \r\n                        name=\"boardName\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Board Title\"\r\n                        style={{ width: window.innerWidth > 767 ? '300px' : ''}}\r\n                        value={props.boardname}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n            </center>\r\n        </div>\r\n    );\r\n\r\n    const popUpBoxStyle = {\r\n        background: 'rgba(255, 255, 255, 0.8)',\r\n        width: window.innerWidth > 767 ? '600px' : '',\r\n        height: '200px',\r\n        top: '35%',\r\n        position:'fixed'\r\n    }\r\n\r\n    const popUpBoxIsOpen = props.toggleCreatingBoard ? true : false;\r\n\r\n    const styleWhenPopUpBox = {\r\n        opacity: popUpBoxIsOpen ? 0.4 : 1,\r\n        pointerEvents: popUpBoxIsOpen ? 'none' : '',\r\n        WebkitUserSelect: popUpBoxIsOpen? 'none' : '',\r\n        msUserSelect: popUpBoxIsOpen? 'none' : '',\r\n        userSelect: popUpBoxIsOpen? 'none' : ''\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <div style={styleWhenPopUpBox} className=\"boards-view\">\r\n                <div className=\"text-right mt-3 mb-3 mr-5 \">\r\n                    {!props.creatingBoard && !props.deletingBoard && boardsToShow.length > 0 ? (\r\n                        <button\r\n                            disabled={props.creatingBoard}\r\n                            onClick={() => props.toggleCreatingBoardWindow()}\r\n                            className=\"button button-purple\"\r\n                        >\r\n                            NEW BOARD\r\n                        </button>\r\n                    ) : (''\r\n                    )}\r\n\r\n                    {props.creatingBoard ? (\r\n                            <div>\r\n                                <div className=\"float-right ml-2\">\r\n                                    <LoaderView borderWidth={4} width={30} height={30} />\r\n                                </div>\r\n                                <div>\r\n                                    <h5>Creating your board...</h5>\r\n                                </div>\r\n                            </div>\r\n                        ) : ('')\r\n                    }\r\n\r\n                    {props.deletingBoard ? (\r\n                        <div>\r\n                          <div className=\"float-right ml-2\">\r\n                            <LoaderView borderWidth={4} width={30} height={30} />\r\n                          </div>\r\n                          <div>\r\n                            <h5>Deleting your board...</h5>\r\n                          </div>\r\n                        </div>\r\n                    ) : (''\r\n                    )}\r\n                </div>\r\n                <div className=\"boards\">\r\n                    {boardsToShow.length > 0 || props.creatingBoard ? (\r\n                        <div className=\"container\">\r\n                            <div className=\"row\"> { boardsToShow } </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"container text-center\">\r\n                            <div className=\"pt-5 mt-5 pb-5 noboards-text\">\r\n                                NO BOARDS TO SHOW. START BY CLICKING ON NEW BOARD.\r\n                            </div>\r\n                            <button\r\n                                disabled={props.creatingBoard}\r\n                                onClick={() => props.toggleCreatingBoardWindow()}\r\n                                className=\"button button-purple\"\r\n                            >\r\n                                NEW BOARD\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {\r\n                props.toggleCreatingBoard === true ? (\r\n                    <div>\r\n                        <PopUpBox\r\n                            style={popUpBoxStyle} \r\n                            popUpBoxContent={PopUpBoxHTML}\r\n                            cancelButtonFunction={props.toggleCreatingBoardWindow} \r\n                            confirmButtonFunction={props.createBoard}\r\n                            disableConfirmButton={props.boardName.length < 1}\r\n                        />\r\n                    </div>\r\n                ) : ('')\r\n            }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default BoardsView\r\n","import React, { Component } from 'react';\r\n\r\nimport Notify from '../../services/sweetalert-service'\r\n\r\nimport * as BoardsService from '../../services/boards-service'\r\nimport BoardsView from './boards-view'\r\n\r\nclass Boards extends Component {\r\n    state = {\r\n        boardName: '',\r\n        usersToAdd: '',\r\n        userId: JSON.parse(localStorage.getItem('user')).id,\r\n        boards: {},\r\n        loadingBoards: true,\r\n        errorLoadingBoards: false,\r\n        creatingBoard: false,\r\n        deletingBoard: false,\r\n        toggleCreatingBoard: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBoards();\r\n    }\r\n\r\n    loadBoards = () => {\r\n        this.setState({loadingBoards: true});\r\n\r\n        BoardsService.getUserBoards(this.state.userId)\r\n            .then((result) => {\r\n                this.setState({boards: result.data.boards})\r\n                this.setState({errorLoadingBoards: false})\r\n            }).catch((err) => {\r\n                this.setState({errorLoadingBoards: true})\r\n                console.log(err);\r\n            }).finally(() => {\r\n                this.setState({loadingBoards: false});\r\n            })\r\n    }\r\n\r\n    toggleCreatingBoardWindow = () => {\r\n        this.setState({toggleCreatingBoard: !this.state.toggleCreatingBoard})\r\n    }\r\n\r\n    createBoard = (e) => {\r\n        e.preventDefault();\r\n\r\n        const boardInfo = {\r\n            boardName: this.state.boardName\r\n        }\r\n\r\n        if (boardInfo.boardName === '') {\r\n            Notify.info('Board name can not be empty.');\r\n            return;\r\n        }\r\n\r\n        this.setState({creatingBoard: true})\r\n        this.toggleCreatingBoardWindow();\r\n\r\n        BoardsService.createBoard(boardInfo, this.state.userId)\r\n            .then((result) => {\r\n                this.setState(prevState => {\r\n                    prevState.boards.splice(0, 0, result.data.board);\r\n                    return {\r\n                        boards: prevState.boards,\r\n                        creatingBoard: false\r\n                    }\r\n                })\r\n                Notify.success('Board has been created', '', false);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            }).finally(() => {\r\n                this.setState({creatingBoard: false})\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n          <BoardsView\r\n            className=\"boards\"\r\n            handleChange={this.handleChange}\r\n            createBoard={this.createBoard}\r\n            deleteBoard={this.deleteBoard}\r\n            boards={this.state.boards}\r\n            loadingBoards={this.state.loadingBoards}\r\n            creatingBoard={this.state.creatingBoard}\r\n            deletingBoard={this.state.deletingBoard}\r\n            errorLoadingBoards={this.state.errorLoadingBoards}\r\n            toggleCreatingBoard={this.state.toggleCreatingBoard}\r\n            toggleCreatingBoardWindow={this.toggleCreatingBoardWindow}\r\n            loadBoards={this.loadBoards}\r\n            boardName={this.state.boardName}\r\n          />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Boards\r\n","import axios from 'axios';\r\n\r\nexport async function getList(listId, listControllerParams) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${listControllerParams.userId}/${listControllerParams.boardId}/lists/${listId}`,\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function addList(listTitle, listControllerParams) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${listControllerParams.userId}/${listControllerParams.boardId}/lists`,\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        data: {\r\n            title: listTitle\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function deleteList(listId, listControllerParams) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${listControllerParams.userId}/${listControllerParams.boardId}/lists/${listId}`,\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function updateList(listInfo, listControllerParams) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${listControllerParams.userId}/${listControllerParams.boardId}/lists`,\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        data: {\r\n            listId: listInfo.listId,\r\n            title: listInfo.title,\r\n            order: listInfo.order\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './moveable-style.css'\r\n\r\nclass Moveable extends Component {\r\n    state = {\r\n        mouseDown: false,\r\n        index: this.props.index,\r\n        X: '',\r\n        Y: '',\r\n        moveable: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const moveable =  document.querySelector(`.moveable-component${[this.props.index]}`);\r\n\r\n        moveable.style.left = moveable.offsetWidth * this.props.index + (this.props.index === 0 ? 0 : 5) + 'px';\r\n        moveable.addEventListener('mousedown', this.mouseDown, true);\r\n        moveable.addEventListener('mouseup', this.mouseUp, true);\r\n        moveable.addEventListener('mousemove', this.mouseMove, true);\r\n\r\n        this.setState({ moveable: moveable});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.state.moveable.removeEventListener('mousedown', this.mouseDown, true);\r\n        this.state.moveable.removeEventListener('mouseup', this.mouseUp, true);\r\n        this.state.moveable.removeEventListener('mousemove', this.mouseMove, true);\r\n    }\r\n\r\n    mouseDown = (event) => {\r\n        const x = this.state.moveable.offsetLeft - event.clientX;\r\n        const y = this.state.moveable.offsetTop - event.clientY;\r\n        this.setState({ \r\n            mouseDown: true,\r\n            X: x,\r\n            Y: y \r\n        })\r\n    }\r\n\r\n    mouseUp = () => {\r\n        this.setState({ mouseDown: false })   \r\n    }\r\n\r\n    mouseMove = (event) => {\r\n        if (this.state.mouseDown) {\r\n            this.setState((prevState) => {\r\n                prevState.moveable.style.left = event.clientX + this.state.X + 'px';\r\n                prevState.moveable.style.top = event.clientY + this.state.Y + 'px';\r\n\r\n                return {\r\n                    moveable: prevState.moveable\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{position: \"absolute\"}} className={`moveable-component${[this.props.index]}`}>\r\n                { this.props.component }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Moveable;\r\n","import axios from 'axios';\r\n\r\nexport async function getCard(cardId, controllerParams) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${controllerParams.userId}/${controllerParams.boardId}/${controllerParams.listId}/cards/${cardId}`,\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function addCard(cardTitle, controllerParams) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${controllerParams.userId}/${controllerParams.boardId}/${controllerParams.listId}/cards`,\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        data: {\r\n            title: cardTitle\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function deleteCard(cardId, controllerParams) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${controllerParams.userId}/${controllerParams.boardId}/${controllerParams.listId}/cards/${cardId}`,\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n\r\nexport async function updateCard(cardInfo, controllerParams) {\r\n    const options = {\r\n        url: `http://localhost:5000/api/${controllerParams.userId}/${controllerParams.boardId}/${controllerParams.listId}/cards`,\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        data: {\r\n            cardId: cardInfo.cardId,\r\n            title: cardInfo.title,\r\n            order: cardInfo.order\r\n        }\r\n    };\r\n\r\n    return (await axios(options));\r\n}\r\n","import React from 'react'\r\nimport { Form, FormGroup } from 'react-bootstrap';\r\n\r\nimport DropDownMenu from '../dropdown-menu/dropdown-menu-container'\r\nimport PopUpBox from '../pop-up-box/pop-up-box-container'\r\n\r\nimport './cards-style.css';\r\n\r\nfunction CardView(props) {\r\n    const display = props.options.length < 3 ? '' : 'd-block'\r\n    const setBottom = (props.card.order > props.options.length - 2) && (props.card.order !== 0 && props.options.length > 1) ? true : false;\r\n\r\n    const dropDownMenuItems = [\r\n      <span\r\n        onClick={() => props.toggleMoving(props.card.cardId, props.card.order, props.card.title)}\r\n        className={`button button-info button-small ${display} mb-1`}\r\n      >\r\n        Move\r\n      </span>,\r\n      <span\r\n        onClick={() => props.deleteCard(props.card.cardId, props.card.order)}\r\n        className={`button button-danger button-small ${display} mb-1`}\r\n      >\r\n        Delete\r\n      </span>,\r\n    ];\r\n\r\n    const dropdownMenuStyle = { top: !setBottom ? 0 : '', bottom: setBottom ? 0 : '' }\r\n\r\n    let options = [];\r\n    for (let index = 0; index < props.options.length; index++) {\r\n      if (index === props.card.order)\r\n        continue;\r\n\r\n      options.push(props.options[index])\r\n    }\r\n  \r\n    const popUpBoxContent = (\r\n      <FormGroup>\r\n      <Form.Label>Order</Form.Label>\r\n          <Form.Control onChange={props.handleChange} name=\"newCardOrder\" as=\"select\">\r\n              { options }\r\n          </Form.Control>\r\n      </FormGroup>\r\n    )\r\n\r\n    return (\r\n      <div onClick={() => props.toggleDrag(props.card.cardId)}>\r\n        {props.updatingCardId !== props.card.cardId || props.changingOrder || props.addingCard? (\r\n          <li className={`card list-group-item mb-1`}>\r\n            <span className=\"float-right\">\r\n              <DropDownMenu style={dropdownMenuStyle} dropDownMenuItems={dropDownMenuItems} />\r\n            </span>\r\n            <span\r\n              className=\"card-title\"\r\n              onClick={() =>\r\n                props.toggleCardTitleUpdate(\r\n                  props.card.title,\r\n                  props.card.cardId,\r\n                  props.card.order\r\n                )\r\n              }\r\n            >\r\n              {props.card.title}\r\n            </span>\r\n          </li>\r\n        ) : (\r\n          <li className=\"card mb-2\">\r\n              <textarea onChange={props.handleChange} autoFocus=\"on\" name=\"cardTitle\" className=\"card-title-change-input\" value={props.cardTitle}>\r\n              </textarea>\r\n          </li>\r\n        )}\r\n        {\r\n          props.updatingCardId === props.card.cardId && props.changingOrder ? (\r\n              <PopUpBox \r\n                popUpBoxContent={popUpBoxContent} \r\n                confirmButtonFunction={() => props.moveCard()} \r\n                cancelButtonFunction={() => props.toggleMoving('')} \r\n              />\r\n          ) : ('')\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction AddCardView(props) {\r\n    return (\r\n        <>\r\n            {props.addingCard === false ? (\r\n              <div className=\"add-card-view\">\r\n                  <li \r\n                    onClick={props.toggleAddingCard}\r\n                    className=\"add-card-button\"\r\n                  >\r\n                    <span>\r\n                        + Add card\r\n                    </span>\r\n                  </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"add-card-menu\">\r\n                <li>\r\n                    <form onSubmit={props.addCard}>\r\n                        <input\r\n                            name=\"cardTitle\"\r\n                            value={props.cardTitle}\r\n                            onChange={props.handleChange}\r\n                            type=\"text\"\r\n                            placeholder=\"Card Title\"\r\n                            autoFocus=\"on\"\r\n                            autoComplete=\"off\"\r\n                            className=\"card-input-text\"\r\n                        />\r\n                        <span \r\n                          disabled={props.cardTitle.trim() === ''} \r\n                          onClick={props.addCard} \r\n                          type=\"submit\" \r\n                          className=\"ml-2 add-button btn-success btn\"\r\n                        > \r\n                          +\r\n                        </span>\r\n                    </form>\r\n                </li>\r\n              </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardView;\r\nexport { AddCardView };\r\n","import React, { Component } from 'react'\r\n\r\nimport Notify from '../../services/sweetalert-service'\r\nimport LoaderView from './../loader/loader-view'\r\n\r\nimport * as CardsService from '../../services/cards-service'\r\nimport CardView, { AddCardView } from './cards-view'\r\n\r\nclass Card extends Component {\r\n    state = {\r\n        cards: this.props.cards,\r\n        cardTitle: '',\r\n        currentCardTitle: '',\r\n        updatingCardId: '',\r\n        addingCard: false,\r\n        updatingCardTitle: false,\r\n        showSavingLoader: false,\r\n        savingLoaderText: 'Saving Changes...',\r\n        cardOrder: 0,\r\n        newCardOrder: 0,\r\n        changingOrder: false,\r\n        ControllerParams: {\r\n            userId: this.props.listParams.userId,\r\n            boardId: this.props.listParams.boardId,\r\n            listId: this.props.listId\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(prevState => {\r\n            prevState.cards.sort((a, b) => a.order - b.order);\r\n\r\n            return {\r\n                cards: prevState.cards\r\n            }\r\n        })\r\n\r\n        window.addEventListener('click', this.unToggleCardTitleUpdate);\r\n        window.addEventListener('keyup', this.unToggleCardTitleUpdate);\r\n\r\n        window.addEventListener('click', this.cancelAddingCard);\r\n        window.addEventListener('keyup', this.cancelAddingCard);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('click', this.unToggleCardTitleUpdate);\r\n        window.removeEventListener('keyup', this.unToggleCardTitleUpdate);\r\n\r\n        window.removeEventListener('click', this.cancelAddingCard);\r\n        window.removeEventListener('keyup', this.cancelAddingCard);\r\n    }\r\n\r\n    toggleAddingCard = () => {\r\n        setTimeout(() => {\r\n            this.setState({\r\n              addingCard: !this.state.addingCard,\r\n              changingOrder: false,\r\n              updatingCardId: '',\r\n              updateCardTitle: false,\r\n              cardTitle: '',\r\n            });\r\n        }, 50);\r\n    }\r\n\r\n    addCard = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (this.state.cardTitle === '')\r\n            return;\r\n        \r\n        this.setState({ showSavingLoader: true, savingLoaderText: 'Adding Card...', cardTitle: '' })\r\n\r\n        CardsService.addCard(this.state.cardTitle, this.state.ControllerParams)\r\n            .then((result) => {\r\n                this.setState(prevState => {\r\n                    prevState.cards.push(result.data)\r\n                    return {cards: prevState.cards}\r\n                })\r\n            }).catch((err) => {\r\n                Notify.error('Error while adding the card.', 'Try refreshing the page.');\r\n            }).finally(() => {\r\n                this.setState({ showSavingLoader: false })\r\n            })\r\n    }\r\n\r\n    deleteCard = (cardId, cardOrder) => {\r\n        if (cardId === null)\r\n            return;\r\n        \r\n        Notify.warning('Are you sure?', 'You won\\'t be able to revert this!')\r\n            .then(result => {\r\n                if (result.value) {\r\n                    this.setState({ showSavingLoader: true, savingLoaderText: 'Deleting Card...' })\r\n\r\n                    CardsService.deleteCard(cardId, this.state.ControllerParams)\r\n                        .then(() => {\r\n                            this.setState(prevState => {\r\n                                prevState.cards = prevState.cards.filter(x => x.cardId !== cardId)\r\n                                    .map(card => {\r\n                                        if (card.order > cardOrder)\r\n                                            card.order--;\r\n                                        \r\n                                        return card;\r\n                                    })\r\n                                return { cards: prevState.cards }\r\n                            })\r\n                        }).catch((err) => {\r\n                            console.log(err);\r\n                        }).finally(() => {\r\n                            this.setState({ showSavingLoader: false });\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCardTitleUpdate = (currentCardTitle, cardId, cardOrder) => {\r\n        this.setState({\r\n          cardTitle: currentCardTitle,\r\n          currentCardTitle: currentCardTitle,\r\n          updatingCardId: cardId,\r\n          cardOrder: cardOrder,\r\n          updatingCardTitle: true,\r\n          addingCard: false,\r\n          changingOrder: false\r\n        });\r\n    }\r\n\r\n    cancelAddingCard = (event) => {\r\n        if (!this.state.addingCard)\r\n            return;\r\n\r\n        if (event.key === 'Escape')\r\n            this.setState({ addingCard: false })\r\n\r\n        if(event.target.matches('.add-card-menu') || event.target.matches('.add-button') \r\n            || event.target.matches('.card-input-text')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ addingCard: false })\r\n    }\r\n\r\n    unToggleCardTitleUpdate = (event) => {\r\n        if (\r\n          this.state.updatingCardId === '' ||\r\n          ((event.target.matches('.card-title') ||\r\n            event.target.matches('.card-title-change-input')) &&\r\n            event.key === undefined) || this.state.changingOrder || this.state.addingCard || !this.state.updatingCardTitle\r\n        ) {\r\n            return;\r\n        }\r\n        \r\n        if(event.key === 'Escape')\r\n            this.setState({ updatingCardId: '', cardTitle: '', updatingCardTitle: false });\r\n        \r\n        if(event.key === 'Enter' || event.key === undefined) {\r\n            this.setState((prevState) => {\r\n                prevState.cardTitle = prevState.cardTitle.trim().replace(\"\\n\", \"\");\r\n\r\n                return {\r\n                    cardTitle: prevState.cardTitle\r\n                }\r\n            }, () => {\r\n                if(this.state.cardTitle === this.state.currentCardTitle || this.state.cardTitle === '') {\r\n                    this.setState({ updatingCardId: '', cardTitle: '', updatingCardTitle: false });\r\n                    return;\r\n                }\r\n    \r\n                this.updateCardTitle({ \r\n                    cardId: this.state.updatingCardId,\r\n                    title: this.state.cardTitle,\r\n                    currentTitle: this.state.currentCardTitle,\r\n                    order: this.state.cardOrder\r\n                });\r\n    \r\n                this.setState({ updatingCardId: '', cardTitle: '', updatingCardTitle: false });\r\n            })\r\n        }\r\n    }\r\n\r\n    updateCardTitle = (cardInfo) => {\r\n        this.setState((prevState) => {\r\n            prevState.showSavingLoader = true\r\n            prevState.cards.find(card => card.cardId === cardInfo.cardId).title = cardInfo.title;\r\n            return {\r\n                cards: prevState.cards,\r\n                showSavingLoader: prevState.showSavingLoader,\r\n                savingLoaderText: 'Updating Card...'\r\n            }\r\n        })\r\n\r\n        CardsService.updateCard(cardInfo, this.state.ControllerParams)\r\n            .then(() => {\r\n            }).catch((err) => {\r\n                this.props.cards.find(card => card.cardId === cardInfo.cardId).title = cardInfo.currentTitle;\r\n                Notify.error('Error while saving changes.', 'Refresh and try again.');\r\n                console.log(err);\r\n            }).finally(() => {\r\n                this.setState({ showSavingLoader: false });\r\n            })\r\n    }\r\n\r\n    toggleMoving = (cardId, cardOrder, cardTitle) => {\r\n        const changingOrder = cardId === (undefined || '') ? false : true;\r\n        \r\n        // Initial value, just in case if the user clicked ok without choosing an order value.\r\n        const newCardOrder = cardOrder === 0 ? 2 : 1;\r\n\r\n        this.setState({\r\n          updatingCardId: cardId,\r\n          cardOrder: cardOrder,\r\n          changingOrder: changingOrder,\r\n          newCardOrder: newCardOrder,\r\n          cardTitle: cardTitle,\r\n          addingCard: false,\r\n        });\r\n    }\r\n\r\n    moveCard = () => {\r\n        const newCardOrder = this.state.newCardOrder - 1;\r\n\r\n        if (newCardOrder === this.state.cardOrder)\r\n            return;\r\n\r\n        const cardInfo = {\r\n            cardId: this.state.updatingCardId,\r\n            title: this.state.cardTitle,\r\n            newCardOrder: this.state.newCardOrder,\r\n            currentCardOrder: this.state.cardOrder,\r\n            order: this.state.newCardOrder\r\n        }\r\n\r\n        cardInfo.newCardOrder -= 1;\r\n        cardInfo.order -= 1;\r\n\r\n        this.setState({ showSavingLoader: true, savingLoaderText: 'Moving Card...' });\r\n        this.modifyCardsOrder(cardInfo.currentCardOrder, cardInfo.newCardOrder)\r\n\r\n        CardsService.updateCard(cardInfo, this.state.ControllerParams)\r\n            .then(() => {\r\n            }).catch((err) => {\r\n                this.modifyCardsOrder(cardInfo.newCardOrder, cardInfo.currentCardOrder)\r\n                Notify.error('Error while moving the card.', 'Refresh and try again.');\r\n            }).finally(() => {\r\n                this.setState({ showSavingLoader: false })\r\n            })\r\n\r\n        this.toggleMoving();\r\n    }\r\n\r\n    modifyCardsOrder = (currentOrder, newCardOrder) => {\r\n        this.setState((prevState) => {\r\n            prevState.cards = prevState.cards.map(card => {\r\n                if (card.order <= newCardOrder && card.order > currentOrder)\r\n                    card.order--;\r\n                else if (card.order >= newCardOrder && card.order < currentOrder)\r\n                    card.order++;\r\n                \r\n                return card;\r\n            })\r\n            \r\n            prevState.cards[currentOrder].order = newCardOrder;\r\n\r\n            return {\r\n                cards: prevState.cards,\r\n            };\r\n        }, () => {\r\n            this.setState((prevState) => {\r\n                prevState.cards.sort((a, b) => a.order - b.order);\r\n                return {\r\n                    cards: prevState.cards\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleDrag = (cardId) => {\r\n        console.log(cardId);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        for (let index = 0; index < this.state.cards.length; index++) {\r\n            const option = <option key={index}> { index + 1 } </option>\r\n            options.push(option);\r\n        }\r\n\r\n        const cards = this.state.cards.map((card) => (\r\n            <CardView\r\n                deleteCard={this.deleteCard}\r\n                key={card.cardId}\r\n                card={card}\r\n                toggleCardTitleUpdate={this.toggleCardTitleUpdate}\r\n                cardTitle={this.state.cardTitle}\r\n                handleChange={this.handleChange}\r\n                updatingCardId={this.state.updatingCardId}\r\n                toggleMoving={this.toggleMoving}\r\n                moveCard={this.moveCard}\r\n                changingOrder={this.state.changingOrder}\r\n                options={options}\r\n                addingCard={this.state.addingCard}\r\n            />\r\n        ));\r\n    \r\n        return (\r\n            <>\r\n                <div style={{maxHeight: this.props.maxHeight }} className=\"cards-container mb-2\">\r\n                    {\r\n                        this.state.showSavingLoader ? (\r\n                            <div>\r\n                                <div className=\"saving-changes-loader\">\r\n                                    <LoaderView width={10} height={10} />\r\n                                </div>\r\n                                <div className=\"saving-changes-loader-text mr-4\">\r\n                                    {this.state.savingLoaderText}\r\n                                </div>\r\n                            </div>\r\n                        ) : ('')\r\n                    }\r\n                    {\r\n                        cards.length > 0 ? (\r\n                            <>\r\n                                { cards }\r\n                            </>\r\n                        ) : ('')\r\n                    }\r\n                </div>\r\n                <div className=\"mt-2 mb-2\">\r\n                    <AddCardView\r\n                        handleChange={this.handleChange}\r\n                        toggleAddingCard={this.toggleAddingCard}\r\n                        addingCard={this.state.addingCard}\r\n                        addCard={this.addCard}\r\n                        cardTitle={this.state.cardTitle}\r\n                        toggleDrag={this.toggleDrag}\r\n                    />\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport { FormGroup, Form, Button } from 'react-bootstrap';\r\n\r\nimport DropDownMenu from '../dropdown-menu/dropdown-menu-container'\r\nimport PopUpBox from '../pop-up-box/pop-up-box-container'\r\n\r\nimport Card from '../cards/cards-container';\r\nimport './lists-style.css'\r\n\r\nfunction ListView(props) {\r\n    const dropDownMenuItems = [\r\n        <span onClick={() => props.toggleChangeOrder(props.listId, props.listOrder, props.listTitle)} className=\"button button-small button-info d-block mb-1\" >\r\n            Move\r\n        </span>,\r\n        <span onClick={() => props.deleteList(props.listId, props.listOrder)} className=\"button button-small button-danger d-block\">\r\n            Delete\r\n        </span>\r\n    ]\r\n\r\n    let options = [];\r\n\r\n    for (let index = 0; index < props.numberOfLists; index++) {\r\n        if (index === props.listOrder)\r\n            continue;\r\n\r\n        const option = <option key={index}> { index + 1 } </option>\r\n        options.push(option);\r\n    }\r\n\r\n    const popUpBoxContent = (\r\n        <FormGroup>\r\n        <Form.Label>Order</Form.Label>\r\n            <Form.Control onChange={props.handleChange} name=\"newListOrder\" as=\"select\">\r\n                { options }\r\n            </Form.Control>\r\n        </FormGroup>\r\n    )\r\n\r\n    return (\r\n        <li onClick={() => props.toggleDrag(props.listId)} className=\"list-group-item p-0 ml-2\">\r\n            <div className=\"list-item\">\r\n            {\r\n                props.listToUpdateId === props.listId && !props.changingOrder ? (\r\n                    <div className=\"mb-1\">\r\n                        <input type=\"text\" name=\"listTitleToUpdate\" autoComplete=\"off\" className=\"list-title-change-input\" value={props.listTitleToUpdate} onChange={props.handleChange} autoFocus='on'/>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"list-title-div\">\r\n                        <span className=\"list-title\" onClick={() => props.toggleChangeTitle(props.listId, props.listTitle, props.listOrder)}>\r\n                            { props.listTitle }\r\n                        </span>\r\n                        <span className=\"float-right\">\r\n                            <DropDownMenu dropDownMenuItems={dropDownMenuItems} />\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n            <div className={`list-view`}>\r\n                {\r\n                    props.listToUpdateId === props.listId && props.changingOrder ? (\r\n                        <PopUpBox \r\n                            popUpBoxContent={popUpBoxContent} \r\n                            confirmButtonFunction={() => props.changeListOrder()} \r\n                            cancelButtonFunction={() => props.toggleChangeOrder('')} \r\n                        />\r\n                    ) : ('')\r\n                }\r\n                <div>\r\n                    <ul className=\"list-group\">\r\n                        <Card \r\n                            maxHeight={props.maxHeight + 'px'}\r\n                            cards={props.cards} \r\n                            listParams={props.listParams}\r\n                            listId={props.listId} \r\n                        />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction ListToAdd(props) {\r\n    return (\r\n        <li style={{left: props.numberOfLists * 300 + 5 + 'px'}} className=\"list-group-item list-add p-0 ml-2\">\r\n            { props.addingList === false ? (\r\n                    <div onClick={props.toggleListAddition} className=\"toggle-adding-list-button p-2\">\r\n                        +  Add list \r\n                    </div>\r\n                ): (\r\n                    <form className=\"list-to-add\">\r\n                        <input\r\n                            autoFocus={true}\r\n                            type=\"text\"\r\n                            value={props.listTitle}\r\n                            onChange={props.handleChange}\r\n                            className=\"form-control list-input-text\"\r\n                            placeholder=\"List Title\"\r\n                            name=\"listTitle\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <div className=\"mt-2\">\r\n                            <Button type=\"submit\" onClick={props.addList} disabled={props.listTitle.trim() === ''} className=\"button button-success button-small button-add-list\"> Add </Button>\r\n                            <button onClick={props.toggleListAddition} className=\"ml-1 button button-danger button-small button-cancel-add-list\"> Cancel </button>\r\n                        </div>\r\n                    </form>\r\n                )\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListView;\r\nexport { ListToAdd };\r\n","import React, { Component } from 'react'\r\n\r\nimport LoaderView from './../loader/loader-view'\r\nimport Notify from '../../services/sweetalert-service'\r\nimport * as ListsService from '../../services/lists-service' \r\nimport Moveable from '../moveable/moveable-container';\r\nimport ListView, { ListToAdd } from './lists-view';\r\n\r\n\r\nclass List extends Component {\r\n    state = {\r\n        lists: this.props.lists,\r\n        listToUpdateId: '',\r\n        currentListTitle: '',\r\n        listTitleToUpdate: '',\r\n        listTitle: '',\r\n        addingList: false,\r\n        order: 0,\r\n        newListOrder: 0,\r\n        previousListOrder: 0,\r\n        changingOrder: false,\r\n        showSavingLoader: false,\r\n        listsControllerParams: {\r\n            userId: JSON.parse(localStorage.getItem('user')).id,\r\n            boardId: this.props.boardId\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('click', this.cancelAddingList);\r\n        window.addEventListener('keyup', this.cancelAddingList);\r\n\r\n        window.addEventListener('click', this.unToggleListTitleUpdate);\r\n        window.addEventListener('keyup', this.unToggleListTitleUpdate);\r\n\r\n        this.updateMaxHeight();\r\n        \r\n        window.addEventListener('resize', this.updateMaxHeight);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('click', this.unToggleListTitleUpdate);\r\n        window.removeEventListener('keyup', this.unToggleListTitleUpdate);\r\n\r\n        window.removeEventListener('click', this.CancelAddingList);\r\n        window.removeEventListener('keyup', this.CancelAddingList);\r\n\r\n        window.removeEventListener('resize', this.updateMaxHeight);\r\n    }\r\n\r\n    updateMaxHeight = () => {\r\n        let offSet = 197\r\n        if (window.screen.availHeight === 812 || window.screen.availHeight === 823)\r\n            offSet = 202\r\n\r\n        else if (window.screen.availHeight === 1024)\r\n            offSet = 235\r\n        const screenOffset = window.screen.availHeight - window.innerHeight;\r\n        const maxHeight = window.screen.availHeight - Math.abs(screenOffset + offSet);\r\n\r\n        this.setState({ maxHeight: maxHeight - 25});\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    toggleListAddition = () => {\r\n        setTimeout(() => {\r\n            this.setState({ addingList: !this.state.addingList });\r\n        }, 50);\r\n    }\r\n\r\n    cancelAddingList = (event) => {\r\n        if (event.target.matches('.list-to-add') \r\n        || event.target.matches('.list-input-text') || event.target.matches('.button-add-list') \r\n        || event.target.matches('.button-cancel-add-list') || !this.state.addingList )\r\n            return;\r\n        \r\n        this.setState({ addingList : false })\r\n    }\r\n\r\n    toggleChangeTitle = (listId, currentListTitle, order) => {\r\n        this.setState({\r\n            changingOrder: false,\r\n            listToUpdateId: listId,\r\n            currentListTitle: currentListTitle,\r\n            listTitleToUpdate: currentListTitle, \r\n            order: order,\r\n        });\r\n    }\r\n\r\n    unToggleListTitleUpdate = (event) => {\r\n        if (\r\n          this.state.listToUpdateId === '' ||\r\n          ((event.target.matches('.list-title') ||\r\n            event.target.matches('.list-title-change-input')) &&\r\n            event.key === undefined) || this.state.changingOrder\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if(event.key === 'Escape' || event.key === undefined)\r\n            this.setState({ listToUpdateId: '', listTitleToUpdate: '' });\r\n\r\n        if(event.key === 'Enter') {\r\n            if(this.state.listTitleToUpdate === this.state.currentListTitle) {\r\n                this.setState({ listToUpdateId: '', listTitleToUpdate: '' });\r\n                return;\r\n            }\r\n\r\n            this.updateListTitle({ \r\n                listId: this.state.listToUpdateId,\r\n                title: this.state.listTitleToUpdate,\r\n                currentTitle: this.state.currentListTitle,\r\n                order: this.state.order \r\n            });\r\n\r\n            this.setState({ listToUpdateId: '', listTitleToUpdate: '' });\r\n        }\r\n    }\r\n\r\n    toggleChangeOrder = (listId, listOrder, listTitle) => {\r\n        const changingOrder = listId === (undefined || '') ? false : true;\r\n\r\n        // Initial value for the newListOrder, just in case if the user clicked ok without choosing an order value.\r\n        const newListOrder = listOrder === 0 ? 2 : 1;\r\n\r\n        this.setState({\r\n          listToUpdateId: listId,\r\n          changingOrder: changingOrder,\r\n          previousListOrder: listOrder,\r\n          newListOrder: newListOrder,\r\n          listTitleToUpdate: listTitle,\r\n        });\r\n    }\r\n\r\n    changeListOrder = () => {\r\n        this.updateListOrder({ \r\n            listId: this.state.listToUpdateId,\r\n            title: this.state.listTitleToUpdate,\r\n            newListOrder: this.state.newListOrder,\r\n            currentListOrder: this.state.previousListOrder,\r\n            order: this.state.newListOrder\r\n        });\r\n\r\n        this.toggleChangeOrder('');\r\n    }\r\n\r\n    addList = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.listTitle === '')\r\n            return;\r\n        \r\n        this.setState({ showSavingLoader: true });\r\n\r\n        ListsService.addList(this.state.listTitle, this.state.listsControllerParams)\r\n            .then((result) => {\r\n                this.setState(prevState => { \r\n                    prevState.lists.push(result.data.list);  \r\n                    return { lists: prevState.lists }\r\n                });\r\n            }).catch((err) => {\r\n                Notify.error('Error while adding the list.', 'Try refreshing the page.');\r\n                console.log(err);\r\n            }).finally(() => {\r\n                this.setState({ showSavingLoader: false })\r\n                this.setState({ listTitle: '' })\r\n            })\r\n    }\r\n\r\n    deleteList = (listId, listOrder) => {\r\n        if (listId === null)\r\n            return;\r\n        \r\n        Notify.warning('Are you sure?', 'You won\\'t be able to revert this!')\r\n            .then(result => {\r\n                if (result.value) {\r\n                    this.setState({ showSavingLoader: true })\r\n\r\n                    ListsService.deleteList(listId, this.state.listsControllerParams)\r\n                        .then(() => {\r\n                            this.setState(prevState => {\r\n                                prevState.lists = prevState.lists.filter(x => x.listId !== listId)\r\n                                    .map(list => {\r\n                                        if (list.order > listOrder)\r\n                                            list.order--;\r\n                                        \r\n                                        return list;\r\n                                    })\r\n                                return { lists: prevState.lists }\r\n                            })\r\n                        }).catch((err) => {\r\n                            console.log(err);\r\n                        }).finally(() => {\r\n                            this.setState({ showSavingLoader: false });\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    updateListTitle = (listToUpdate) => {\r\n        this.setState((prevState) => { \r\n            prevState.showSavingLoader = true\r\n            prevState.lists.find(l => l.listId === listToUpdate.listId).title = listToUpdate.title;\r\n\r\n            return prevState\r\n        })\r\n\r\n        ListsService.updateList(listToUpdate, this.state.listsControllerParams)\r\n            .then(() => {\r\n            }).catch((err) => {\r\n                this.props.lists.find(l => l.listId === listToUpdate.listId).title = listToUpdate.currentTitle;\r\n                Notify.error('Error while saving changes.', 'Refresh and try again.');\r\n            }).finally(() => {\r\n                this.setState({ showSavingLoader: false });\r\n            })\r\n    }\r\n\r\n    modifyListsOrder = (currentOrder, newListOrder) => {\r\n        this.setState((prevState) => { \r\n            prevState.lists = prevState.lists.map(list => {\r\n                if (list.order <= newListOrder && list.order > currentOrder)\r\n                    list.order--;\r\n                else if (list.order >= newListOrder && list.order < currentOrder)\r\n                    list.order++;\r\n                \r\n                return list;\r\n            })\r\n            \r\n            prevState.lists[currentOrder].order = newListOrder;\r\n\r\n            return {\r\n                lists: prevState.lists,\r\n            };\r\n        }, () => {\r\n            this.setState((prevState) => {\r\n                prevState.lists.sort((a, b) => a.order - b.order);\r\n                return {\r\n                    lists: prevState.lists\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    updateListOrder = (listToUpdate) => {\r\n        listToUpdate.newListOrder -= 1;\r\n        listToUpdate.order -= 1;\r\n\r\n        this.setState({ showSavingLoader: true });\r\n        this.modifyListsOrder(listToUpdate.currentListOrder, listToUpdate.newListOrder)\r\n\r\n        ListsService.updateList(listToUpdate, this.state.listsControllerParams)\r\n            .then(() => {\r\n            }).catch((err) => {\r\n                this.modifyListsOrder(listToUpdate.newListOrder, listToUpdate.currentListOrder)\r\n                Notify.error('Error while saving changes.', 'Refresh and try again.');\r\n            }).finally(() => {\r\n                this.setState({ showSavingLoader: false })\r\n            })\r\n    }\r\n\r\n    toggleDrag = (listId) => {\r\n    }\r\n\r\n    render() {\r\n        const lists = this.state.lists.map((list, index) => {\r\n            const l = <ListView\r\n              listParams={this.state.listsControllerParams}\r\n              listId={list.listId}\r\n              listTitle={list.title}\r\n              listOrder={list.order}\r\n              changingOrder={this.state.changingOrder}\r\n              cards={list.cards}\r\n              deleteList={this.deleteList}\r\n              toggleChangeTitle={this.toggleChangeTitle}\r\n              listTitleToUpdate={this.state.listTitleToUpdate}\r\n              listToUpdateId={this.state.listToUpdateId}\r\n              toggleChangeOrder={this.toggleChangeOrder}\r\n              changeListOrder={this.changeListOrder}\r\n              handleChange={this.handleChange}\r\n              showSavingLoader={this.state.showSavingLoader}\r\n              numberOfLists={this.state.lists.length}\r\n              maxHeight={this.state.maxHeight}\r\n              toggleDrag={this.toggleDrag}\r\n            />\r\n\r\n            return <Moveable key={list.listId} index={index} component={l} />\r\n        });\r\n\r\n        return (\r\n            <div className=\"lists-container\">\r\n                {\r\n                    this.state.showSavingLoader ? (\r\n                        <div>\r\n                            <div className=\"saving-changes-loader\">\r\n                                <LoaderView width={10} height={10} />\r\n                            </div>\r\n                            <div className=\"saving-changes-loader-text mr-4\">\r\n                                Saving Changes...\r\n                            </div>\r\n                        </div>\r\n                    ) : ('')\r\n                }\r\n                <ul className=\"lists list-group list-group-horizontal\">\r\n                    { lists }\r\n                    <ListToAdd\r\n                        numberOfLists={this.state.lists.length}\r\n                        toggleListAddition={this.toggleListAddition} // toggles the adding list property\r\n                        addingList={this.state.addingList} // used to trigger the adding list menu\r\n                        listTitle={this.state.listTitle}\r\n                        addList={this.addList}\r\n                        handleChange={this.handleChange}\r\n                    />\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React from 'react'\r\nimport { Button, Form, FormGroup } from 'react-bootstrap';\r\n\r\nimport LoaderView from './../loader/loader-view'\r\nimport ErrorPage from '../error-page/error-page-view';\r\nimport PopUpBox from '../pop-up-box/pop-up-box-container';\r\nimport List from '../lists/lists-container';\r\n\r\nimport './board-details-style.css';\r\n\r\nfunction BoardDetailsView(props) {\r\n    if (props.loadingBoard) {\r\n        return (\r\n            <div className=\"board-details\">\r\n                <div className=\"boards-loader\">\r\n                    <div className=\"loader-view pb-5 mb-5 d-flex justify-content-center\">\r\n                        <LoaderView width={100} height={100} />\r\n                    </div>\r\n                    <div className=\"loader-view loader-text mt-5 pt-5 d-flex justify-content-center\">\r\n                        <h5>Loading board...</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(props.errorWhileLoadingBoard) {\r\n        return <ErrorPage code={\"500\"} text={\"Error while loading the board.\"} buttonHTML = {\r\n          <button onClick={() => props.loadBoard()} className=\"error-page-button\">TRY AGAIN</button>\r\n        } />\r\n    }\r\n\r\n    const popUpBoxContent = (\r\n      <FormGroup className=\"mt-4\">\r\n        <Button onClick={props.toggleInvitingPeople} className=\"button button-yellow d-block button-small mb-1\">\r\n          Invite people\r\n        </Button>\r\n        <Button onClick={() => props.deleteBoard(props.boardId)} className=\"button button-danger d-block button-small\">\r\n          Delete board\r\n        </Button>\r\n      </FormGroup>\r\n    );\r\n\r\n    const invitingPopUpBoxContent = (\r\n      <FormGroup className=\"mt-4\">\r\n        <Form.Label className=\"text-dark\"> invite people </Form.Label>\r\n        <Form.Control\r\n          onChange={props.handleChange} \r\n          name=\"peopleEmails\" \r\n          placeholder=\"user1@gmail.com, user2@outlook.com, ...\" \r\n          autoFocus=\"on\"\r\n          autoComplete=\"off\"\r\n          value={props.peopleEmails}\r\n        />\r\n        <FormGroup className=\"mt-4\">\r\n          <Button onClick={props.toggleInvitingPeople} className=\"button button-small button-info mr-2\">\r\n            Back\r\n          </Button>\r\n          <Button type=\"submit\" onClick={props.invitePeople} className=\"button button-small button-success\">\r\n            Invite\r\n          </Button>\r\n        </FormGroup>\r\n      </FormGroup>\r\n    );\r\n\r\n    const popUpBoxStyle = {\r\n      background: 'rgba(255, 255, 255, 0.8)',\r\n      width: window.innerWidth > 767 ? '600px' : '',\r\n      height: '200px',\r\n      top: '35%',\r\n      position:'fixed'\r\n    }\r\n\r\n    const popUpBoxIsOpen = props.showMenu || props.invitingPeople ? true : false\r\n\r\n    const styleWhenPopUpBox = {\r\n      opacity: popUpBoxIsOpen ? 0.4 : 1,\r\n      pointerEvents: popUpBoxIsOpen ? 'none' : '',\r\n      WebkitUserSelect: popUpBoxIsOpen? 'none' : '',\r\n      msUserSelect: popUpBoxIsOpen? 'none' : '',\r\n      userSelect: popUpBoxIsOpen? 'none' : ''\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div style={ styleWhenPopUpBox } className=\"board-details\">\r\n          <div className=\"ml-1 mr-1\">\r\n            {!props.updatingBoardTitle ? (\r\n              <div className=\"mt-1 mb-1\">\r\n                <span onClick={props.toggleUpdatingTitle} className=\"board-title\"> {props.board.boardName} </span>\r\n                <span onClick={props.toggleMenu} className=\"show-menu-button float-right\">\r\n                  Show Menu\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"mt-1\">\r\n                <form onSubmit={props.unToggleUpdatingTitle}>\r\n                  <input\r\n                    onChange={props.handleChange}\r\n                    className=\"board-title-input mt-1 mb-2\"\r\n                    type=\"text\"\r\n                    name=\"boardTitle\"\r\n                    value={props.boardTitle}\r\n                    autoComplete=\"off\"\r\n                    autoFocus=\"on\"\r\n                    />\r\n                </form>\r\n              </div>\r\n            )}\r\n            <div className=\"board-wrapper\">\r\n              <div className=\"board-contents\">\r\n                <List boardId={props.board.boardId} lists={props.board.lists} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {\r\n          props.showMenu ? (\r\n            <PopUpBox\r\n              popUpBoxContent={popUpBoxContent}\r\n              style={popUpBoxStyle}\r\n              showConfirmButton={false}\r\n              cancelButtonFunction={props.toggleMenu}\r\n              cancelButtonText=\"Close menu\"\r\n            />\r\n          ) : ''\r\n        }\r\n\r\n        {\r\n          props.invitingPeople && !props.showMenu ? (\r\n            <PopUpBox\r\n              popUpBoxContent={invitingPopUpBoxContent}\r\n              style={popUpBoxStyle}\r\n              cancelButtonFunction={props.toggleInvitingPeople}\r\n              showConfirmButton={false}\r\n              showCancelButton={false}\r\n              cancelButtonText=\"Back\"\r\n              confirmButtonText=\"Add Users\"\r\n            />\r\n          ) : ('')\r\n        }\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default BoardDetailsView;\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Notify from '../../services/sweetalert-service'\r\nimport LoaderView from './../loader/loader-view'\r\n\r\nimport * as BoardsService from '../../services/boards-service'\r\nimport BoardDetailsView from './board-details-view'\r\n\r\nclass BoardDetails extends Component {\r\n    state = {\r\n        userId: JSON.parse(localStorage.getItem('user')).id,\r\n        board: {},\r\n        loadingBoard: true,\r\n        errorWhileLoadingBoard: false,\r\n        updatingBoardTitle: false,\r\n        boardTitle: '',\r\n        currentBoardTitle: '',\r\n        showSavingLoader: false,\r\n        savingLoaderText: 'Updating title...',\r\n        showMenu: false,\r\n        invitingPeople: false,\r\n        peopleEmails: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBoard();\r\n\r\n        window.addEventListener('click', this.unToggleUpdatingTitle);\r\n        window.addEventListener('keyup', this.unToggleUpdatingTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('click', this.unToggleUpdatingTitle);\r\n        window.removeEventListener('keyup', this.unToggleUpdatingTitle);\r\n    }\r\n\r\n    toggleInvitingPeople = () => {\r\n        this.setState({ invitingPeople: !this.state.invitingPeople, showMenu: !this.state.showMenu })\r\n    }\r\n\r\n    invitePeople = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ showSavingLoader: true, savingLoaderText: 'Working on it...' })\r\n\r\n        const emailsToInvite = this.state.peopleEmails.split(',');\r\n        for(let i = 0; i < emailsToInvite.length; i++) {\r\n            emailsToInvite[i] = emailsToInvite[i].trim()\r\n        }\r\n\r\n        BoardsService.addUsersToBoard(this.state.userId, this.state.board.boardId, emailsToInvite)\r\n            .then((result) => {\r\n                Notify.success('Users have been added successfully.');\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                Notify.error('Error try reloading the page.');\r\n            }).finally(() => {\r\n                this.setState({ showSavingLoader: false })\r\n            });\r\n    }\r\n\r\n    loadBoard = () => {\r\n        const boardId = window.location.pathname.slice(8, 16);\r\n        this.setState({ loadingBoard: true, errorWhileLoadingBoard: false });\r\n\r\n        BoardsService.getBoard(this.state.userId, boardId)\r\n            .then((result) => {\r\n                this.setState({board: result.data.board, errorWhileLoadingBoard: false}, () => {\r\n                    this.setState((prevState) => {\r\n                        prevState.board.lists.sort((a, b) => a.order - b.order);\r\n                        return { board: prevState.board }\r\n                    })\r\n                })\r\n            }).catch((err) => {\r\n                this.setState({errorWhileLoadingBoard: true})\r\n                console.log(err);\r\n            }).finally(() => {\r\n                this.setState({loadingBoard: false});\r\n            });\r\n    }\r\n\r\n    toggleUpdatingTitle = () => {\r\n        this.setState({\r\n            updatingBoardTitle: !this.state.updatingBoardTitle,\r\n            boardTitle: this.state.board.boardName,\r\n            currentBoardTitle: this.state.board.boardName,\r\n        });\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ showMenu: !this.state.showMenu })\r\n    }\r\n\r\n    deleteBoard = (boardId) => {\r\n        Notify.warning('Are you sure?', 'You won\\'t be able to revert this!')\r\n            .then(result => {\r\n                if (result.value) {\r\n                    this.setState({deletingBoard: true});\r\n                    BoardsService.deleteBoard(boardId, this.state.userId)\r\n                        .then(() => {\r\n                            Notify.success('Board has been deleted!', '', false, '', 'center');\r\n                            this.setState({ boardDeleted: true })\r\n                        }).catch((err) => {\r\n                            Notify.error('Error', '', true);\r\n                            console.log(err);\r\n                        });\r\n                }\r\n            })\r\n    }\r\n\r\n    unToggleUpdatingTitle = (event) => {\r\n        event.preventDefault();\r\n        if (\r\n            this.state.updatingBoardTitle === false ||\r\n            ((event.target.matches('.board-title') ||\r\n            event.target.matches('.board-title-input')) &&\r\n            event.key === undefined)\r\n            ) {\r\n                return;\r\n            }\r\n            \r\n        if (event.key === 'Escape')\r\n            this.toggleUpdatingTitle();\r\n        \r\n        if (event.key === undefined || event.key === 'Enter') {\r\n            if (this.state.boardTitle === this.state.currentBoardTitle) {\r\n                this.toggleUpdatingTitle();\r\n                return;\r\n            }\r\n\r\n            const boardInfo = {\r\n                boardId: this.state.board.boardId, \r\n                boardName: this.state.boardTitle,\r\n                currentBoardTitle: this.state.board.boardName\r\n            }\r\n\r\n            this.setState((prevState) => {\r\n                prevState.board.boardName = boardInfo.boardName;\r\n                return {\r\n                    board: prevState.board,\r\n                    showSavingLoader: true,\r\n                    savingLoaderText: 'Updating title...'\r\n                }\r\n            })\r\n\r\n            this.toggleUpdatingTitle();\r\n\r\n            BoardsService.updateBoard(this.state.userId, boardInfo)\r\n                .then(() => {})\r\n                .catch((err) => {\r\n                    this.setState((prevState) => {\r\n                        prevState.board.boardName = boardInfo.currentBoardTitle;\r\n        \r\n                        return {\r\n                            board: prevState.board\r\n                        }\r\n                    })\r\n                }).finally(() => {\r\n                    this.setState({ showSavingLoader: false })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.boardDeleted)\r\n            return <Redirect to='/boards' />\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.showSavingLoader ? (\r\n                        <div>\r\n                            <div className=\"saving-changes-loader\">\r\n                                <LoaderView width={10} height={10} />\r\n                            </div>\r\n                            <div className=\"saving-changes-loader-text mr-4\">\r\n                                {this.state.savingLoaderText}\r\n                            </div>\r\n                        </div>\r\n                    ) : ('')\r\n                }\r\n\r\n                <BoardDetailsView\r\n                  board={this.state.board}\r\n                  handleChange={this.handleChange}\r\n                  errorWhileLoadingBoard={this.state.errorWhileLoadingBoard}\r\n                  loadingBoard={this.state.loadingBoard}\r\n                  loadBoard={this.loadBoard}\r\n                  toggleUpdatingTitle={this.toggleUpdatingTitle}\r\n                  updatingBoardTitle={this.state.updatingBoardTitle}\r\n                  boardTitle={this.state.boardTitle}\r\n                  unToggleUpdatingTitle={this.unToggleUpdatingTitle}\r\n                  showMenu={this.state.showMenu}\r\n                  toggleMenu={this.toggleMenu}\r\n                  deleteBoard={this.deleteBoard}\r\n                  boardId={this.state.board.boardId}\r\n                  toggleInvitingPeople={this.toggleInvitingPeople}\r\n                  invitingPeople={this.state.invitingPeople}\r\n                  invitePeople={this.invitePeople}\r\n                  peopleEmails={this.state.peopleEmails}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoardDetails;\r\n","import React from 'react'\r\n\r\nfunction MemberProfileView () {\r\n    return (\r\n        <div> Profile Component </div>\r\n    )\r\n}\r\n\r\nexport default MemberProfileView;\r\n","import React, { Component } from 'react'\r\n\r\nimport MemberProfileView from './member-profile-view'\r\n\r\nclass MemberProfile extends Component {\r\n    render() {\r\n        return <MemberProfileView />\r\n    }\r\n}\r\n\r\nexport default MemberProfile;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect  } from 'react-router-dom';\r\n\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport AnonymousRoute from './AnonymousRoute';\r\nimport Navbar from './components/navbar/navbar-container'\r\nimport Home from './components/home/home-container'\r\nimport Register from './components/register/register-container'\r\nimport Boards from './components/boards/boards-container'\r\nimport BoardDetails from './components/boards/board-details-container';\r\nimport MemberProfile from './components/member-profile/member-profile-container'\r\nimport ErrorPage from './components/error-page/error-page-view';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    authenticated: localStorage.getItem('token') === null ? false : true,\r\n    isSmallScreen: window.innerWidth < 768 ? true : false\r\n  }\r\n\r\n  changeAuthenticationState () {\r\n    const authenticated = localStorage.getItem('token') === null ? false : true;\r\n    this.setState({authenticated : authenticated});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Navbar\r\n          changeAuthenticationState={this.changeAuthenticationState.bind(this)}\r\n          authenticated={this.state.authenticated}\r\n          isSmallScreen={this.state.isSmallScreen}\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <ProtectedRoute exact path=\"/boards\" component={Boards} />\r\n          <ProtectedRoute exact path=\"/boards/:boardId/:boardName\" component={BoardDetails} {...this.props}/>\r\n          <ProtectedRoute exact path=\"/profile\" component={MemberProfile} />\r\n          <Route exact path=\"/error\" component={ErrorPage} />\r\n          <AnonymousRoute exact path=\"/register\" component={Register}\r\n            changeAuthenticationState={this.changeAuthenticationState.bind(this)}\r\n            isSmallScreen={this.state.isSmallScreen}\r\n          />\r\n          <Route render={() => <Redirect to={{ pathname: '/' }} />} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\nimport './style.css';\r\nimport './buttons-style.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}